GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from NT.out...
(gdb) break 222
Breakpoint 1 at 0x9b89: file NeutrinoTransport.cpp, line 222.
(gdb) r
Starting program: /home/jared/NeutrinoTransport/NT.out 

Breakpoint 1, main () at NeutrinoTransport.cpp:222
222	            auto F0_k0 = ComputeRates(R_In, R_Out, Nold, dV);
(gdb) s
ComputeRates (
    R_In=<error reading variable: Cannot access memory at address 0x30>, 
    R_Out=std::vector of length 13, capacity 13 = {...}, 
    N=std::vector of length -5864062007601, capacity 0 = {...}, 
    dV=std::vector of length 584982902889686072, capacity -289952977357233513 = {...}) at Source/ComputeRates.h:8
8	{
(gdb) n
9	    int N_g = N.size();
(gdb) n
10	    std::vector<double> F(N_g);
(gdb) n
11	    std::vector<double> k(N_g);
(gdb) [K(gdb) [K(gdb) b 22
Breakpoint 2 at 0x55555555af22: file Source/ComputeRates.h, line 22.
(gdb) c
Continuing.

Breakpoint 2, ComputeRates (R_In=std::vector of length 40, capacity 40 = {...}, 
    R_Out=std::vector of length 40, capacity 40 = {...}, 
    N=std::vector of length 40, capacity 40 = {...}, 
    dV=std::vector of length 40, capacity 40 = {...}) at Source/ComputeRates.h:22
22	    return std::make_pair(F, k);
(gdb) p F
$1 = std::vector of length 40, capacity 40 = {103826.43845348587, 
  304644.461783031, 498812.25581080222, 684551.38902371423, 859955.34483474353, 
  1023012.799096602, 1171636.8377276326, 1303706.6966351289, 1417125.4395486042, 
  1509896.9498295016, 1580225.116625956, 1626636.4084409194, 1648123.3100761643, 
  1644299.5207339495, 1615548.1927331695, 1563133.5020787925, 1489238.2545237364, 
  1396893.6163611487, 1289787.9058354993, 1171977.9536821304, 1047561.6659822757, 
  920305.72043226089, 792130.0095280644, 655623.88449877326, 492920.68186869903, 
  324177.41934818594, 196073.00527764452, 113123.04951644303, 62471.496525487957, 
  33020.314562553329, 16709.65697799368, 8096.7602937734873, 3755.3281671665104, 
  1665.3273590353313, 704.84508659791072, 284.06873122246435, 108.71988169946943, 
  39.394893022659126, 13.471006136833971, 4.3319009384996408}
(gdb) [K(gdb) [K(gdb) p K
(gdb) p k
$2 = std::vector of length 40, capacity 40 = {122217.51040655939, 
  360566.98941216391, 596328.9266190225, 828233.88692506787, 1054973.0247202285, 
  1275213.2641819415, 1487631.1048546212, 1690956.957228113, 1884030.4653065114, 
  2065867.0921596601, 2235734.9195526354, 2393238.2109689368, 2538400.4730405477, 
  2671734.3363219253, 2794278.9793382944, 2907579.6760582658, 3013581.6156617929, 
  3114415.6149016647, 3212069.1818350335, 3307959.680337429, 3402448.8050757977, 
  3494390.1766660349, 3581492.3833072032, 3666284.2752764234, 3771749.640027768, 
  3937177.4167193449, 4183110.9627758842, 4503180.9167668344, 4884407.4774804115, 
  5315822.4332421236, 5789253.6282725809, 6299270.6089546382, 6842798.5347261559, 
  7418452.9342374848, 8025654.163974219, 8663345.119091846, 9327479.8963414133, 
  10004755.40581166, 10655607.359502288, 11169575.416486097}
(gdb) n
11	    std::vector<double> k(N_g);
(gdb) n
10	    std::vector<double> F(N_g);
(gdb) n
22	    return std::make_pair(F, k);
(gdb) p t
(gdb) n
23	}
(gdb) n
main () at NeutrinoTransport.cpp:223
223	            std::vector<double> &F0 = F0_k0.first;
(gdb) p t
$3 = 1.0000000000000001e-15
(gdb) break 1[K231
Breakpoint 3 at 0x55555555dcd7: file NeutrinoTransport.cpp, line 231.
(gdb) c
Continuing.

Breakpoint 3, main () at NeutrinoTransport.cpp:231
231	            dt_FE = *std::min_element(inv_k.begin(), inv_k.end());
(gdb) p exp_kdt[K[K
(gdb) p exp_kdt
$4 = std::vector of length 40, capacity 40 = {0.99999999987411592, 
  0.99999999962861597, 0.99999999938578121, 0.99999999914691906, 
  0.99999999891337776, 0.99999999868653033, 0.99999999846774001, 
  0.99999999825831432, 0.99999999805944861, 0.99999999787215688, 
  0.99999999769719305, 0.9999999975349646, 0.99999999738544754, 
  0.99999999724811361, 0.99999999712189269, 0.99999999700519293, 
  0.99999999689601093, 0.9999999967921519, 0.99999999669156869, 
  0.99999999659280159, 0.99999999649547777, 0.99999999640077808, 
  0.99999999631106284, 0.99999999622372715, 0.99999999611509793, 
  0.99999999594470723, 0.99999999569139575, 0.99999999536172368, 
  0.99999999496906034, 0.9999999945247029, 0.99999999403706874, 
  0.99999999351175128, 0.99999999295191755, 0.99999999235899351, 
  0.99999999173357623, 0.99999999107675452, 0.99999999039269571, 
  0.99999998969510195, 0.99999998902472453, 0.99999998849533733}
(gdb) n
233	            if( dt <= dt_FE )
(gdb) p dt_FE
$5 = 8.9528917860567697e-08
(gdb) n
235	               BuildCollisionMatrix_NES( R_In, R_Out, Nold, dV, N_g, 0.0, cMat, kVec );
(gdb) s
BuildCollisionMatrix_NES (R_In=std::vector of length 0, capacity 0, 
    R_Out=std::vector of length -1954687336427, capacity -5680879 = {...}, 
    N=std::vector of length 0, capacity -1, 
    dV=<error reading variable: Cannot access memory at address 0x2f>, N_g=21845, 
    tol=6.953355807316433e-310, A=std::vector of length 0, capacity 0, 
    k=std::vector of length 42, capacity 0 = {...})
    at Source/BuildCollisionMatrix_NES.h:3
3	void BuildCollisionMatrix_NES(std::vector<std::vector<double> >& R_In, std::vector<std::vector<double> >& R_Out, std::vector<double>& N, std::vector<double>& dV, int N_g, double tol, std::vector<std::vector<double> >& A, std::vector<double>& k) {
(gdb) p R_O[KIn
$6 = std::vector of length 0, capacity 0
(gdb) n
4	    A.resize(N_g);
(gdb) p R_In
$7 = std::vector of length 40, capacity 40 = {
  std::vector of length 40, capacity 40 = {486.45771637337407, 
    56.980059330510159, 21.375688008883543, 11.379214321873844, 
    7.2017580247055273, 5.0589969461551574, 3.8125961706854996, 
    3.0232746334869298, 2.491915056689455, 2.1173889085206445, 
    1.8437536514930659, 1.6379088816452787, 1.4791594354983384, 
    1.3539508300704777, 1.2530507195000138, 1.1699718608347052, 
    1.1000620284504967, 1.0399642860718656, 0.98728095923562775, 
    0.94034242552140013, 0.89802522419720643, 0.85959592767944559, 
    0.82457795306577364, 0.79264644004379969, 0.76355439648226642, 
    0.73708773302153008, 0.71304261112633205, 0.69121737432940122, 
    0.67141244555635238, 0.6534335609543549, 0.63709559976097763, 
    0.6222256655539008, 0.60866495343627658, 0.59626941692635405, 
    0.58490946581620984, 0.57446898663217894, 0.56484395615326544, 
    0.55594086086837735, 0.54767506781910569, 0.53996923355744098}, 
  std::vector of length 40, capacity 40 = {50.049938111262264, 
    161.24120636960708, 60.565873872828412, 32.286245073305331, 
    20.463598480527011, 14.397500357506923, 10.868337135329979, 
    8.6333330422437431, 7.1290106303004386, 6.0691052793449121, 
    5.2952048235423144, 4.7135337623621201, 4.2654185001918528, 
    3.9123865652371679, 3.6281891179035175, 3.3943407338589475, 
    3.1975520786930152, 3.0282158910345536, 2.8794715709119485, 
    2.7465630218738721, 2.6263273081075584, 2.5167455856591348, 
    2.4165512342533759, 2.3249153921035575, 2.2412240535376089, 
    2.1649424348029269, 2.0955478362497395, 2.0325075760674882, 
    1.9752815050973949, 1.923334640637935, 1.87615134327568, 1.8332468527864096, 
    1.7941747693238783, 1.7585305757238046, 1.7259519744113865, 
    1.6961169989414668, 1.6687407881060561, 1.6435717262100178, 
    1.6203874428656406, 1.5989909776889086}, 
  std::vector of length 40, capacity 40 = {16.367664533657823, 
    52.797572275743185, 95.538853349855117, 51.002410713263089, 
    32.376150377465386, 22.816302513426184, 17.25364245713488, 
    13.730899118603459, 11.360394024209237, 9.6910223858203715, 
    8.4730618251242884, 7.5586077544806169, 6.8550452232236774, 
    6.301569464271231, 5.8566154475244216, 5.4908353170515616, 
    5.1830677940752024, 4.9179770022018614, 4.6846079293638523, 
    4.4753991091269532, 4.2853861212692212, 4.1114832825338565, 
    3.9518399341156467, 3.8053135211255982, 3.6710917335300781, 
--Type <RET> for more, q to quit, c to continue without paging--c
    3.5484621202860658, 3.4366997180618988, 3.3350330376730288, 3.2426527991539449, 3.1587380017355686, 3.0824842064450331, 3.0131266759912401, 2.9499559308277341, 2.8923259538319477, 2.8396564687557131, 2.7914310385635082, 2.7471925939314721, 2.7065376696588643, 2.6691102511201135, 2.6345957969529739}, std::vector of length 40, capacity 40 = {7.5348989956223225, 24.338961803832401, 44.105144449889195, 67.35990720553842, 42.828308128285578, 30.234411031208264, 22.905335994612781, 18.264276381629074, 15.142243072627723, 12.944990142821121, 11.343430196442863, 10.142546560280623, 9.220118056796073, 8.4957898615303282, 7.9145138422569792, 7.4373049800046687, 7.0359529590073562, 6.689948322683553, 6.3846254510978335, 6.1099028043520223, 5.8592526770348519, 5.6287429858501294, 5.4161513093439746, 5.2202222935793081, 5.0401271655294604, 4.8751324856771951, 4.7244403317001176, 4.5871436744311245, 4.4622448029273345, 4.3486990618891621, 4.245461324271278, 4.1515242254445281, 4.0659445598441941, 3.9878582506867675, 3.916486083356451, 3.8511328639269293, 3.79118245269196, 3.7360906197442603, 3.685377104388063, 3.6386177556227532}, std::vector of length 40, capacity 40 = {4.0889405135891259, 13.227373760308478, 24.006611400775224, 36.722989455902081, 51.72680696896532, 36.58161893528348, 27.767536974676062, 22.186849193948422, 18.434311689774454, 15.79535625543862, 13.874107715529602, 12.43583688249867, 11.333296606487508, 10.469528338006537, 9.7779465508207029, 9.2112310477412347, 8.7349943262256495, 8.324134371770457, 7.9606663791803101, 7.6322694556712136, 7.3310815908861668, 7.0525377408984635, 6.7942551559625777, 6.5550722812256312, 6.3343359654515918, 6.1314605888774674, 5.9457164908588176, 5.7761748996506581, 5.6217391181837533, 5.4812102254014361, 5.3533560920390606, 5.2369685131198809, 5.130903494327427, 5.0341052976053726, 4.945617315863883, 4.8645834925570348, 4.7902437046368771, 4.7219258303572822, 4.6590364427735045, 4.6010513732764338}, std::vector of length 40, capacity 40 = {2.4408236898533135, 7.9082145430244646, 14.376416479986384, 22.029688063288372, 31.085842821668603, 41.803063913850721, 31.794297398173327, 25.459157800359669, 21.201611463437789, 18.210356735568354, 16.035749363466408, 14.411019756305375, 13.168654109988776, 12.198160048966612, 11.423447967939412, 10.790225713182862, 10.258839364682439, 9.8001936154585128, 9.3933755808609476, 9.0240916566385607, 8.6833543539784515, 8.366161151324226, 8.0701702812347502, 7.7945196656712383, 7.5389301105386064, 7.3031427232547728, 7.0866483804146352, 6.8886205931841964, 6.7079617642259999, 6.543395043316961, 6.3935604466357701, 6.257094994160429, 6.1326902242274803, 6.0191278622278457, 5.915297701055394, 5.8202026109345946, 5.7329552066084988, 5.652769784356126, 5.5789521167496305, 5.5108887789721495}, std::vector of length 40, capacity 40 = {1.5483051527107123, 5.024793352406026, 9.1506076080572782, 14.047765881564191, 19.860987743271938, 26.761656467474243, 34.953469306506527, 28.051126713553614, 23.416254760443334, 20.163671561524581, 17.803197829725892, 16.043837207922689, 14.702668731273659, 13.658811251334571, 12.828762333424764, 12.152664435796918, 11.586536073899502, 11.097898598974895, 10.663294360746372, 10.266700035577209, 9.8981792454395787, 9.5524563664479221, 9.2274098685541617, 8.922672888205172, 8.6385390496086689, 8.3752621224243562, 8.1327154539123274, 7.9103085467906711, 7.7070494249327242, 7.5216664745156434, 7.3527363381894792, 7.1987914453443542, 7.058398389303103, 6.9302080149082208, 6.8129823569917223, 6.7056047033747346, 6.6070785734943662, 6.5165202446378778, 6.4331481585534878, 6.3562713812312666}, std::vector of length 40, capacity 40 = {1.0230554919821495, 3.3259785036095191, 6.0681171144488557, 9.3338088708964158, 13.22345541156221, 17.856388707361255, 23.374167353428206, 29.945472957674991, 25.059393454101087, 21.636101016885455, 19.15695175335777, 17.314527726852294, 15.91536989197737, 14.83137291658702, 13.973736887474763, 13.278468983642609, 12.698216073429974, 12.197730293371457, 11.751378838749503, 11.341619545851284, 10.957699172994195, 10.594187260741474, 10.249324908755696, 9.923414317841317, 9.6175133286411629, 9.3325768544803491, 9.069030175701057, 8.8266613055734364, 8.6046985032500878, 8.4019651985992105, 8.2170442948108438, 8.0484177236692478, 7.8945696214401355, 7.7540538955485632, 7.6255324746873931, 7.5077920300872778, 7.3997463888306347, 7.3004304328481293, 7.208989669954275, 7.1246682260863947}, std::vector of length 40, capacity 40 = {0.69519499355423486, 2.2642376953010639, 4.1390453339644724, 6.3796735653617072, 9.0579112430449626, 12.25943006762931, 16.08626001715788, 20.659621741474844, 26.124298262736165, 22.617288794850179, 20.084719221997222, 18.209235658922228, 16.791619387699278, 15.699663358981873, 14.841372377624792, 14.150050875470042, 13.575936550595376, 13.081626144477001, 12.639664617019896, 12.231164002661936, 11.844630594614062, 11.474535300296354, 11.119569775645274, 10.780841876520718, 10.460346705700191, 10.159924980529235, 9.8807277998134229, 9.6230717384762183, 9.3865275211372268, 9.1701098425187855, 8.9724824452488949, 8.7921345146737373, 8.6275128958315275, 8.4771104855460901, 8.3395182687890514, 8.2134504582119163, 8.0977515677177045, 7.9913925330233448, 7.8934610407465851, 7.803149478126989}, std::vector of length 40, capacity 40 = {0.48152709248555453, 1.5713181132843355, 2.8782139706008576, 4.4458689774990763, 6.3267001490238632, 8.5835423535398476, 11.291560253976641, 14.540438467324208, 18.436871770401485, 23.108546914506029, 20.582973010301753, 18.721472596228903, 17.322484025956392, 16.252712814681434, 15.419017753865614, 14.753413648013742, 14.204688679041213, 13.733896164060594, 13.312096443340305, 12.919189972672919, 12.542955753893636, 12.17774497415942, 11.822713550511859, 11.479855212963299, 11.152242496091375, 10.842773864852907, 10.55350010840997, 10.285422154698894, 10.038582452204384, 9.8122893903557955, 9.6053668990436876, 9.4163725793304121, 9.2437635138549261, 9.0860091486299339, 8.9416598413891961, 8.8093823545019436, 8.6879729275822246, 8.5763565378939042, 8.4735786222176284, 8.3787934330193856}, std::vector of length 40, capacity 40 = {0.33773619788023362, 1.1042739634814795, 2.0269754027106739, 3.1380073869262102, 4.4761796784084629, 6.0882430776729368, 8.0303963786652783, 10.37001849704872, 13.187639893557929, 16.579167822569026, 20.65956087690855, 18.853535016492049, 17.506625740764186, 16.486115645023094, 15.699672501552646, 15.079393030836265, 14.573564749007126, 14.142309651098596, 13.755532810513992, 13.392024489027504, 13.038785092346242, 12.68993592959268, 12.345016327701552, 12.006907022555868, 11.679846365942371, 11.367937514918234, 11.074298505438886, 10.800773662014032, 10.548012771501609, 10.315726476593788, 10.102982971428697, 9.9084726810854615, 9.7307125280478441, 9.5681873339536594, 9.4194379040909588, 9.2831090170544748, 9.1579699673706756, 9.0429179621231182, 8.9369719137100141, 8.8392616741093111}, std::vector of length 40, capacity 40 = {0.23862902841206218, 0.78180691901905974, 1.4381650504593895, 2.23159503936468, 3.1910696597332735, 4.3516730263045265, 5.7558044417583121, 7.4545699506880609, 9.5093722814613706, 11.993707365527451, 14.995177485031245, 18.618913617062827, 17.351596926974878, 16.403359350421425, 15.683326278727243, 15.124983792860929, 14.677049848469828, 14.299332708280332, 13.960916606483877, 13.639565029507351, 13.321392403233673, 13.000086450766142, 12.675376537350346, 12.350927184151033, 12.032155315644621, 11.724473954985189, 11.432220628654722, 11.158241827185902, 10.903935889205886, 10.66953058409154, 10.454427431665074, 10.257517380734784, 10.077428693787143, 9.9127013363486931, 9.7618979946611368, 9.6236669677172042, 9.496771815571396, 9.3800999831906182, 9.2726593919714748, 9.1735690471399991}, std::vector of length 40, capacity 40 = {0.16911807741211021, 0.5552084217668154, 1.0235728446191974, 1.5920121162749266, 2.2822280158062376, 3.1206455450058348, 4.1393816012197959, 5.3773733467010461, 6.8816760477223013, 8.7089364353105392, 10.9270461047929, 13.616985031399333, 16.876037120390709, 16.016994847911654, 15.378220617295026, 14.894658490233695, 14.516363015523849, 14.203459206160604, 13.92456902542337, 13.656519429965595, 13.38439661382435, 13.101165099307581, 12.806427514037688, 12.504399416390585, 12.201584744411138, 11.904747244545609, 11.619567892663934, 11.350048616209968, 11.098482163276378, 10.865735228211575, 10.651637473271268, 10.455351807568725, 10.275671307577012, 10.111231600817456, 9.9606487016778615, 9.8225995603218497, 9.6958626713149823, 9.5793331398311796, 9.4720228630232342, 9.3730530332094713}, std::vector of length 40, capacity 40 = {0.11977379912002101, 0.3940216121480401, 0.72801620613500906, 1.1350043772010616, 1.6312246736919727, 2.2365636755772567, 2.9753364604109893, 3.877204394254588, 4.9782404674422294, 6.3221486128611915, 7.9616403950417727, 9.95997380946819, 12.392671098377697, 15.35057800435972, 14.801864189940193, 14.401527264561247, 14.100716105169084, 13.860522416256497, 13.649510964946181, 13.443703184334892, 13.22701596060797, 12.991339953341638, 12.735713615889029, 12.464521198164105, 12.185125822540574, 11.905589001235281, 11.633011996942244, 11.372691777700679, 11.127964449863674, 10.900465493163114, 10.690554841899839, 10.497743647076192, 10.321045773099213, 10.159233853998568, 10.011008492339041, 9.8750997038467681, 9.7503206476833473, 9.6355905242414064, 9.5299392256810389, 9.4325022954257776}, std::vector of length 40, capacity 40 = {0.084487727290440864, 0.27850580150612997, 0.51570943028286742, 0.80590539443236231, 1.1611821986784348, 1.5964311488447041, 2.1299724457824443, 2.7842994928991254, 3.5869526008233841, 4.571530196026508, 5.7788424469495414, 7.2582115175991504, 9.0689293800756019, 11.281905570897004, 13.982636024472097, 13.668126724718507, 13.4482914461452, 13.284804390848475, 13.146645600265453, 13.00924229585593, 12.855252576343903, 12.675127595072626, 12.466807660797548, 12.23430681329617, 11.9854523165522, 11.729419935964605, 11.474733715489286, 11.228098265026459, 10.994041910000739, 10.77510838293486, 10.57229994628179, 10.385559222874473, 10.214180586406851, 10.057116383771492, 9.9131829477037314, 9.7811868658719909, 9.6599944385979271, 9.5485640526284357, 9.4459563111934735, 9.3513320681273271}, std::vector of length 40, capacity 40 = {0.059178956507930987, 0.19546395171700201, 0.36271347622043792, 0.56812293176582873, 0.82061092626302035, 1.1312287221162896, 1.5136575827164456, 1.9848070734548111, 2.56552638871517, 3.2814388247256319, 4.1639070934272908, 5.2511360366210198, 6.5894230674791068, 8.234580984153995, 10.253589004690891, 12.727553232120957, 12.586679356250892, 12.499691193879416, 12.435561995961546, 12.369454551424363, 12.282790652907474, 12.164269419780817, 12.010155249324374, 11.823413501645401, 11.611751870731593, 11.385104505311705, 11.153308094655683, 10.924538370611206, 10.704657630071742, 10.497268198111415, 10.304140449699572, 10.125742128652178, 9.9617139032086364, 9.8112331503722139, 9.6732634664444266, 9.5467106806033897, 9.430511300223225, 9.3236763872808162, 9.2253083789216994, 9.1346029067297732}, std::vector of length 40, capacity 40 = {0.04104622614965054, 0.13582916734545589, 0.25256684295531112, 0.39647319343203957, 0.57404563573935952, 0.79338191494642818, 1.0645692705660013, 1.4001584358780121, 1.8157349677897878, 2.3305996986879016, 2.9685689311125065, 3.758904514148576, 4.7373866855802653, 5.9475526600709934, 7.4421461464360092, 9.2848596171391709, 11.553371145034747, 11.537587785469874, 11.544675483316643, 11.549133322363636, 11.531341926227986, 11.478074304492232, 11.383382395866469, 11.248417674477288, 11.079997566653633, 10.88824672266464, 10.684041127802349, 10.47700600546076, 10.274457218483807, 10.081216001091516, 9.8999650462063791, 9.7318064514795477, 9.5768028316588403, 9.4344068139760555, 9.3037623554527134, 9.183896836602635, 9.0738327202293156, 8.9726455333575288, 8.8794888987914202, 8.7936009983922059}, std::vector of length 40, capacity 40 = {0.028119572373612831, 0.093217290021845048, 0.17366414677124953, 0.27317936543628529, 0.39642140973358664, 0.54922835437084261, 0.73891636864404875, 0.97464783423146795, 1.2678813639957163, 1.6329164075963642, 2.0875453178184844, 2.6538264773121938, 3.3589951003431722, 4.2365365137870681, 5.3274633806542839, 6.6818648018402884, 8.3608271613659984, 10.439610350654316, 10.510452792619761, 10.580983374218738, 10.630196837042881, 10.642994433018853, 10.610833723968591, 10.532297938262071, 10.412399255246919, 10.260650627249913, 10.08847164992857, 9.9067750419201914, 9.7243976862351591, 9.5475428726794345, 9.3799725219107639, 9.2235548424877969, 9.0788656595755768, 8.9456917263796303, 8.8233941466004353, 8.7111448667151858, 8.6080671907155395, 8.5133113369118902, 8.4260896770091858, 8.3456889384072106}, std::vector of length 40, capacity 40 = {0.018983799019306778, 0.063033948640453863, 0.11763837101723303, 0.18540123942511913, 0.26959977318999517, 0.37436226043054144, 0.50489144553789, 0.66774339730293342, 0.87117321641823142, 1.1255602002877525, 1.4439264327725752, 1.842564773235188, 2.3417961295945338, 2.9668837198626576, 3.7491459224286157, 4.7273297444917759, 5.9493296842060444, 7.474351286752583, 9.376247904836184, 9.5040933516962571, 9.614875181097954, 9.691343606653863, 9.7222609283550838, 9.7030406183514959, 9.6359315616219376, 9.5288180579787198, 9.3928919373888942, 9.2399747384078807, 9.0803853452621368, 8.9218540114948706, 8.7694120054225078, 8.625856047751741, 8.4923901431570386, 8.3692084415272205, 8.2559331333542207, 8.1519063410559305, 8.0563671860401627, 7.9685496856794957, 7.8877309242857088, 7.8132504606382804}, std::vector of length 40, capacity 40 = {0.012604327322528324, 0.041912403180892281, 0.078342747815518698, 0.12368094247270919, 0.18018352114106925, 0.25070624223622517, 0.33886659887766191, 0.44924900725441241, 0.5876625699259006, 0.76146304869569681, 0.97995280535379758, 1.2548754640784718, 1.6010268841566024, 2.0370121772105616, 2.5861914231089695, 3.2778743735967644, 4.1488427795766185, 5.2452885893069459, 6.6252454042122695, 8.3620684508505949, 8.5249960018145643, 8.6593032558053267, 8.7508347308058045, 8.7915552353087065, 8.7801167941869398, 8.7216346747727034, 8.6260085383014147, 8.5052859025900371, 8.3710347604220985, 8.2325916391326981, 8.0964599715863628, 7.966565112906042, 7.8448884592151735, 7.7321275898458115, 7.6282222239478035, 7.5327159189298145, 7.4449803141453232, 7.364342061381203, 7.2901477606788312, 7.2217926174618823}, std::vector of length 40, capacity 40 = {0.0082157268828714127, 0.027354303407068067, 0.051201278263605557, 0.080953294433982137, 0.11812810680212882, 0.1646542669210905, 0.22298570388366906, 0.29624787266703734, 0.38842357126740862, 0.50458839138407641, 0.65120821226557679, 0.83651463646819835, 1.070979630332433, 1.3679190673029955, 1.7442675218195165, 2.2215833983584186, 2.8273609043332559, 3.5967353027340767, 4.5746591651637392, 5.818593262402401, 7.4021031366591821, 7.5845850122055989, 7.7308974145161526, 7.8293607149361089, 7.874540569757043, 7.8677051392645057, 7.816168575634058, 7.7311512942006146, 7.6249245398084016, 7.5083553718344103, 7.3895997546381498, 7.2739497458014029, 7.1643596409145456, 7.0621609086922534, 6.9676877468898573, 6.8807267879416258, 6.8008032050339517, 6.7273462229155152, 6.6597763398835967, 6.5975461769753361}, std::vector of length 40, capacity 40 = {0.0052489431165806035, 0.017495895851177314, 0.032787585221637931, 0.051906742870319454, 0.075849141333702463, 0.10588434397878835, 0.14363385865970099, 0.19117168636359755, 0.25115349240734908, 0.32698234070646692, 0.42302129440843489, 0.54486664452437461, 0.69970083462418353, 0.89675236758666066, 1.1479021761940114, 1.4684922572101715, 1.8784104225434599, 2.4035384014001946, 3.0776493877288478, 3.9448166627919443, 5.0623466712870577, 6.5044907544709103, 6.6959554719204384, 6.8466167823768487, 6.9467338491904131, 6.9929865456189217, 6.9887723146544483, 6.9430779884435117, 6.8678971438501248, 6.775254317073184, 6.6750345381533789, 6.5741529964606951, 6.4767884927922879, 6.3850865048316985, 6.2998849006472808, 6.2212726383660133, 6.1489577644103219, 6.0824852391719819, 6.0213545456182542, 5.9650770733310061}, std::vector of length 40, capacity 40 = {0.0032821457901379219, 0.010950690607088278, 0.020542764224405371, 0.032557554793991882, 0.0476316619177461, 0.066578936749067258, 0.090442010780150295, 0.12055905056196192, 0.15865023950552143, 0.20692988828765793, 0.26825208209689616, 0.34630079112097262, 0.44584007227733052, 0.57304734092022491, 0.73596376240406769, 0.94511114440411714, 1.2143431153954678, 1.5620156172786057, 2.0125702834253292, 2.59861528677399, 3.363555528668086, 4.3647682483142196, 5.677469326591619, 5.8709294995170582, 6.0209551463809614, 6.1193256279810546, 6.1644839534976059, 6.1616001303216468, 6.1209228901221184, 6.054785230719955, 5.9746217109244482, 5.8891812116517102, 5.8041716555660647, 5.7227995594915688, 5.6465645760112535, 5.5759458650727387, 5.5108782275662769, 5.4510420050168493, 5.3960231274006629, 5.3453935769470666}, std::vector of length 40, capacity 40 = {0.0020057739666572327, 0.006697750752481353, 0.01257553029457285, 0.019949238201047499, 0.029215121343285508, 0.040880842867381355, 0.055598323571758423, 0.074206510552313018, 0.09778714155924921, 0.12773761232868996, 0.16586658681454347, 0.21452035302087108, 0.27675168240523279, 0.35654893612248056, 0.45915240849254146, 0.59149825643163156, 0.76284771797569817, 0.98567859623881637, 1.2769325572056229, 1.6597189154398715, 2.1655654859792781, 2.8372720519153996, 3.7323571315657165, 4.9271520367505364, 5.1180695346112755, 5.2642345546697475, 5.3586535687255132, 5.4013028750379597, 5.3988674630231754, 5.3625259690459437, 5.3045993156482165, 5.235688267795588, 5.1633467365990482, 5.0921682879849941, 5.0245435143431036, 4.961474943718895, 4.9031923380397808, 4.8495426671710709, 4.8002106902611184, 4.75483254355448}, std::vector of length 40, capacity 40 = {0.0011962183259228315, 0.0039973768818459621, 0.0075110230181731881, 0.011924681979846747, 0.017478304300312174, 0.02447981852913959, 0.033325372947122414, 0.044525794262897885, 0.058741245001722203, 0.076826770975879713, 0.099892500167798326, 0.12938393744464124, 0.16719052647721175, 0.2157950880488172, 0.27848378959541137, 0.35964690708745045, 0.46521539157220204, 0.60329676300907475, 0.78509427424284506, 1.0262120740672671, 1.3484605213573329, 1.7822704741160558, 2.3697891781121179, 3.1686492967740261, 4.2563818723705502, 4.4418376683154506, 4.5820569434807794, 4.6710882995180372, 4.7103021101107583, 4.7077035718359044, 4.6751161715447234, 4.6245578040634046, 4.5656321845738743, 4.5047103017670231, 4.4453981175258841, 4.3894244212625741, 4.3374220295747117, 4.2894556789297784, 4.2453303037025432, 4.2047533990425787}, std::vector of length 40, capacity 40 = {0.00069514607186736081, 0.0023244627711893175, 0.0043704932088457138, 0.0069434954327547392, 0.010184707560393786, 0.014275610333693831, 0.019449997320681551, 0.026009791667277515, 0.034345827864902416, 0.044965269054915845, 0.058528022500287449, 0.075895621307354166, 0.098197860134020987, 0.12692548836277259, 0.16406216829922493, 0.21227655182478006, 0.27520656087899975, 0.35788335750482086, 0.46736217207761649, 0.61365056523888561, 0.81104977259666489, 1.0800455334364987, 1.4498874946739249, 1.9619577206676613, 2.6739242683369131, 3.6645711597858419, 3.84271170135542, 3.9756521615203728, 4.0583797802160939, 4.0935788966887694, 4.0904123954638987, 4.0610891859733229, 4.0170824853175962, 3.966903859055503, 3.9158049349171753, 3.8665459587033135, 3.8203353656312951, 3.7775404582719756, 3.7381233906511007, 3.7018769363229356}, std::vector of length 40, capacity 40 = {0.00039297470723618821, 0.001314819228220594, 0.0024735693402618527, 0.003932188472879101, 0.0057713982696022551, 0.0080950215173188848, 0.011036946591129136, 0.014770267855037463, 0.01951931841837868, 0.02557558290888463, 0.033318897644437864, 0.043246023237423645, 0.056009803427148001, 0.072474021217815127, 0.093792206647313789, 0.12152368432222782, 0.15780785140616127, 0.20562892563539784, 0.26921922827923322, 0.35467073640962932, 0.47085325248137733, 0.63077212123204229, 0.85353177252786006, 1.1670845495663571, 1.611903832691933, 2.2455877399350661, 3.148208232763372, 3.3178958467906274, 3.4427424821130748, 3.5186271120673642, 3.5495016399976085, 3.5455347768630201, 3.5190761135891244, 3.480858118668638, 3.4382640246010521, 3.3955250249944444, 3.3546992248105534, 3.3165980605609482, 3.2814052921296599, 3.249024868837751}, std::vector of length 40, capacity 40 = {0.00021572847929689372, 0.00072217817843621781, 0.0013593345748165104, 0.0021620713466817959, 0.003175125558354351, 0.004456081334771018, 0.0060792570640877909, 0.0081408116621578923, 0.010765474035185371, 0.014115454430925409, 0.018402337220389368, 0.023903146346403288, 0.030982432578834169, 0.040123348762509094, 0.051972554498087312, 0.067406851787550348, 0.087634269223528793, 0.11434965293573653, 0.14997582301830006, 0.19803780805187196, 0.26374215498356096, 0.35486842801802954, 0.48312576308844285, 0.66617585827397252, 0.93055156484803925, 1.3156619861191055, 1.8789121280879388, 2.7016790540211555, 2.8622731373562225, 2.9785847111939399, 3.047375177389108, 3.0738331106626888, 3.0689783712900014, 3.0450682119967079, 3.0119440449262789, 2.9758748907254824, 2.9401919044633513, 2.9063870196288826, 2.8749779147626424, 2.8460270466620448}, std::vector of length 40, capacity 40 = {0.00011478337808858598, 0.00038444831732766628, 0.00072397480293093469, 0.0011520672984386296, 0.0016927313415484042, 0.002376885167984268, 0.0032444568832257761, 0.0043471405477042563, 0.0057520303760075229, 0.0075464363224158216, 0.0098443159811920228, 0.012794972858204266, 0.016595034458577462, 0.021505344889505208, 0.027875458874937625, 0.036180162234497264, 0.047075229216697372, 0.061483989448268092, 0.08073308118822535, 0.10676652749064548, 0.14248452757690541, 0.19228078219214501, 0.26289381802697698, 0.36474538366276715, 0.51400566823332772, 0.73567400541272243, 1.06793553606865, 1.5678620685004594, 2.3181318317205788, 2.4693466853877202, 2.5769597665677306, 2.6386301133213186, 2.6607550942466704, 2.655040963601643, 2.6334336716695721, 2.604780120505874, 2.574290294994892, 2.5445253312791856, 2.5165334363126535, 2.4906218683847166}, std::vector of length 40, capacity 40 = {5.9073913307220042e-05, 0.00019795592759049252, 0.00037294200117906826, 0.00059372932769948699, 0.00087276736172513779, 0.0012260987593809059, 0.0016744517015228632, 0.0022446756336488042, 0.0029716348367584389, 0.0039007180476400955, 0.0050911911913440596, 0.0066207331270614856, 0.0085916856414581279, 0.011139877545615242, 0.014447442494756926, 0.018761981856809475, 0.024425933220397416, 0.031922407367554494, 0.041947593555363982, 0.055526108360574797, 0.074196200571279319, 0.10030957480482043, 0.13752032764172661, 0.19158488226142814, 0.27166453388732531, 0.39241046464352747, 0.57718951649351102, 0.86280255939939088, 1.3058303474791939, 1.9902242160467649, 2.1320304084657544, 2.2309892760429575, 2.2856884760019351, 2.3037006542211449, 2.2972409015230975, 2.2777443143113456, 2.2530066577317269, 2.2272650501378588, 2.2024406114166664, 2.1792435577943281}, std::vector of length 40, capacity 40 = {2.9343838576728168e-05, 9.8378351361317847e-05, 0.00018541572610024894, 0.00029530584999790018, 0.00043427635566309629, 0.00061035583714677121, 0.00083392224808460436, 0.0011184236873328119, 0.0014813290336709805, 0.0019453877838965389, 0.0025403129598065345, 0.0033050576297834226, 0.0042909519531125857, 0.0055661336840991654, 0.0072219889192333998, 0.00938279445594856, 0.012220526611599454, 0.015978043487139264, 0.021005858123341773, 0.027821071362682807, 0.037202812858684854, 0.050348706727238589, 0.06913477960799741, 0.096552256385524601, 0.13744668098240012, 0.1997664379175996, 0.29664059620563848, 0.44972332082189109, 0.69427310659667185, 1.0862040283740901, 1.7106866228314239, 1.8432381512338012, 1.9337400220165499, 1.9817492733686315, 1.9959684666208675, 1.9889318488775338, 1.9713900870540897, 1.9500757902145498, 1.9283600073189029, 1.9076465559055811}, std::vector of length 40, capacity 40 = {1.4036041985481864e-05, 4.7080063305169209e-05, 8.8766176768283642e-05, 0.0001414292233328087, 0.00020806758826763403, 0.00029254824263316151, 0.00039987161604037219, 0.00053651967835004557, 0.00071091497088367607, 0.00093402882322537453, 0.0012201935853128343, 0.0015882009963859006, 0.0020628152999728022, 0.00267690999039475, 0.0034745746496467273, 0.004515768962814427, 0.0058834780998130946, 0.0076949319843006084, 0.010119442284398095, 0.013407080147710753, 0.017935338432125844, 0.024286169834532041, 0.033375325216111182, 0.046673249847578438, 0.06658807815601149, 0.097136483091157133, 0.14512070251466569, 0.22216937128351058, 0.34816542239920922, 0.55667268995681063, 0.90274661616072094, 1.4726965309846363, 1.5962750295204362, 1.6786261356641332, 1.7203223703314201, 1.7311344539362989, 1.7237173298098665, 1.7079959513021477, 1.6896676719719677, 1.6713550084551179}, std::vector of length 40, capacity 40 = {6.4494627776046043e-06, 2.1643592171987525e-05, 4.0821988820820453e-05, 6.5064116869593199e-05, 9.5756182450391989e-05, 0.00013468656597143437, 0.0001841686310311962, 0.00024720207547863118, 0.00032768567777093809, 0.00043069911309220004, 0.00056287916114331122, 0.0007329282193347165, 0.00095231451501648248, 0.0012362605656693843, 0.0016051802178139642, 0.0020868316886751524, 0.0027196294243127354, 0.0035578411000505984, 0.0046798595135994899, 0.00620152323789096, 0.0082978420797264214, 0.011238994081410519, 0.015451097862049859, 0.021620914441687181, 0.030879886559945877, 0.045133509475382229, 0.067658877699466977, 0.10419484577844262, 0.16491514166438159, 0.26789707903277954, 0.44486783972987975, 0.74981863030337437, 1.2700906081345165, 1.3850622514064939, 1.4596428090642684, 1.4954681016492248, 1.5032956337619567, 1.4956992406847347, 1.4816740952055754, 1.4659432879541225}, std::vector of length 40, capacity 40 = {2.839483985892884e-06, 9.5338028129514998e-06, 1.7987777646895922e-05, 2.8679491316845296e-05, 4.2222789022821651e-05, 5.9409851319580755e-05, 8.1265723787232746e-05, 0.00010911993871844402, 0.00014470093284172533, 0.00019026108341654461, 0.0002487435580646469, 0.00032400773283653464, 0.00042113942769258166, 0.00054688865485690821, 0.00071030584329039405, 0.00092369501286538398, 0.0012040802384434811, 0.0015755077014253575, 0.0020727117403450718, 0.0027470227659784721, 0.003676013009207208, 0.004979504825297164, 0.0068466680887156635, 0.0095829045020254886, 0.013692832210044015, 0.020030494670685964, 0.030076970888402537, 0.046462340001195444, 0.073956866200957941, 0.12134688429091789, 0.20489590430618065, 0.35436770175101595, 0.62247360074307445, 1.0974532997802298, 1.2042358866408329, 1.2714727651994027, 1.3019093510808013, 1.307186991781933, 1.2996002145073888, 1.2871502803797037}, std::vector of length 40, capacity 40 = {1.1945856803775538e-06, 4.0130698051234739e-06, 7.5740443768169106e-06, 1.2079809476213709e-05, 1.7790038821881982e-05, 2.503993911773197e-05, 3.4263377191119288e-05, 4.6023245228455485e-05, 6.1051482944258175e-05, 8.0302063577950269e-05, 0.00010502167139295314, 0.00013684514210009026, 0.00017792674489003192, 0.00023112533420345852, 0.00030027335628448921, 0.00039057980557248762, 0.00050925019500879692, 0.00066645993732390772, 0.00087690481644846674, 0.0011623002972383589, 0.0015554636862007865, 0.0021070932348623644, 0.0028972555576718103, 0.0040552981514585399, 0.0057952055779879746, 0.008479940687722334, 0.012741447311962889, 0.019709822719398265, 0.031460196020906286, 0.051896837080584325, 0.08850544930745835, 0.15575491271543365, 0.28133904067256021, 0.51646789626949396, 0.95012052362311306, 1.0491588942498185, 1.1095049048710708, 1.1350552675173162, 1.1382100824097645, 1.1307977597980101}, std::vector of length 40, capacity 40 = {4.7887086672758793e-07, 1.609633447131395e-06, 3.0388699783544642e-06, 4.8481402282775931e-06, 7.1420884319519768e-06, 1.0055830391034595e-05, 1.3764296682554057e-05, 1.8494494765265236e-05, 2.454166756355191e-05, 3.2290680348205444e-05, 4.2244537804129671e-05, 5.5062874458200433e-05, 7.1614872585666126e-05, 9.3053858404470557e-05, 0.00012092564349870233, 0.00015733078277555302, 0.00020517420808017795, 0.00026855718634363952, 0.00035340170783548411, 0.00046845704622920252, 0.00062694390477687075, 0.0008492851802982753, 0.0011677348137775435, 0.0016344067768921074, 0.0023355487402833704, 0.0034175754863887838, 0.00513581828400788, 0.0079482892183154099, 0.012700864499366216, 0.021002089026811138, 0.035996428380432641, 0.063971405266021589, 0.1176477804377201, 0.22256763024715084, 0.42821752862245638, 0.82413135970258466, 0.91587955440496671, 0.96979824387031943, 0.99096953673460297, 0.99240595294676592}, std::vector of length 40, capacity 40 = {1.823629649333171e-07, 6.1336133003542031e-07, 1.1583255930904286e-06, 1.8484924716170496e-06, 2.723914678248929e-06, 3.8363190143727544e-06, 5.2526913010808317e-06, 7.059978896543856e-06, 9.3712862875998233e-06, 1.2334073268905594e-05, 1.6141082483890662e-05, 2.1045082198254424e-05, 2.7379125310051435e-05, 3.5585094549780784e-05, 4.6255146113338188e-05, 6.0193765455864063e-05, 7.8513234170949625e-05, 0.00010278352785379562, 0.00013527110701081223, 0.00017932385640329781, 0.00023999981572590798, 0.00032511136495561136, 0.00044699516307280423, 0.00062558252881365797, 0.00089385972581938441, 0.0013078344039282859, 0.0019652265895568114, 0.0030415222631155893, 0.0048615646234957, 0.0080459314589357844, 0.01381873878421669, 0.02467047256908483, 0.045804411737032757, 0.088265709334053644, 0.17539157584795576, 0.35472736578703623, 0.716152857471406, 0.80106159467453597, 0.84901644197223847, 0.86630844987393651}, std::vector of length 40, capacity 40 = {6.5764932479605141e-08, 2.2134708006005482e-07, 4.1813184625379248e-07, 6.6744890839758225e-07, 9.8381327237692932e-07, 1.3859740197900429e-06, 1.8982166583368391e-06, 2.5520704517958516e-06, 3.3885573878122713e-06, 4.4611673725184947e-06, 5.8398226438313235e-06, 7.6162241271207505e-06, 9.9111948824110396e-06, 1.2885022664847569e-05, 1.6752470870784626e-05, 2.1805250898204565e-05, 2.8446591418836669e-05, 3.7245517490229149e-05, 4.9023318028379688e-05, 6.4992926627894252e-05, 8.6986549616943236e-05, 0.00011783364986952256, 0.00016200154732054199, 0.00022670656216588876, 0.00032388996962940688, 0.0004738250512661538, 0.00071188445657415801, 0.0011016062530519756, 0.0017606902015528023, 0.0029143612293695267, 0.0050084685915093019, 0.0089568619891712241, 0.016698013657905835, 0.032471818563251299, 0.065743699229571795, 0.13762437127784521, 0.29351042804966659, 0.62339540504328306, 0.70190363929861865, 0.74435063903547127}, std::vector of length 40, capacity 40 = {2.238401045647168e-08, 7.5396841099476465e-08, 1.4246718045683207e-07, 2.2747396881183924e-07, 3.3538124270082461e-07, 4.7260201692757497e-07, 6.4744477604534723e-07, 8.7069839037989011e-07, 1.1564024348762363e-06, 1.522866030854045e-06, 1.9940250318738476e-06, 2.6012716127135629e-06, 3.3859662303840871e-06, 4.4029740720402883e-06, 5.7257961778767412e-06, 7.454249679345354e-06, 9.7262815802998582e-06, 1.2736518172178725e-05, 1.676581424865179e-05, 2.2228881877161748e-05, 2.9752065095103752e-05, 4.030246525192664e-05, 5.540673799752519e-05, 7.7530529915516901e-05, 0.00011075311394465325, 0.00016199875340893927, 0.00024334682725631263, 0.00037649274003669211, 0.00060162797150088883, 0.00099569157187616658, 0.0017111604188720252, 0.0030613958314167984, 0.0057150807723658761, 0.011153927432361377, 0.022777638859833867, 0.048587371461613696, 0.107478815563364, 0.24250831842652965, 0.5435295820133359, 0.61605910747248338}, std::vector of length 40, capacity 40 = {7.1652667924079128e-09, 2.4156205521384649e-08, 4.5657353236372518e-08, 7.2917979637345926e-08, 1.075345855393109e-07, 1.5156991393297283e-07, 2.0769690730196123e-07, 2.7938713541467864e-07, 3.7115889670716252e-07, 4.8890529480560576e-07, 6.4033114308859767e-07, 8.3554173844014329e-07, 1.0878509117907037e-06, 1.4149182151104865e-06, 1.8403984208744613e-06, 2.396410074262523e-06, 3.1273324187699328e-06, 4.0957671393981209e-06, 5.3920353466225628e-06, 7.1494843713726573e-06, 9.5694798211473168e-06, 1.2962891706449928e-05, 1.7820377038929553e-05, 2.4934237973827481e-05, 3.5615037941881669e-05, 5.20868912782963e-05, 7.8228908500331372e-05, 0.00012100673340742754, 0.00019332211272013518, 0.00031987096190787349, 0.00054960280911874613, 0.00098318517132927404, 0.0018358418893743981, 0.0035867054851811968, 0.0073471623253469646, 0.015797955362392913, 0.035606373444991533, 0.08349781917994703, 0.20001879352548269, 0.47461044144697817}}
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) n
6	        A[i].resize(N_g, 0.0);
(gdb) n
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
6	        A[i].resize(N_g, 0.0);
(gdb) 
5	    for (int i = 0; i < N_g; i++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
9	    for (int i = 0; i < N_g; i++) {
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) 
10	        for (int j = 0; j < N_g; j++) {
(gdb) 
11	        A[i][j] = 0;
(gdb) break 27
Breakpoint 4 at 0x555555559b70: file Source/BuildCollisionMatrix_NES.h, line 27.
(gdb) n
10	        for (int j = 0; j < N_g; j++) {
(gdb) p B
(gdb) q
A debugging session is active.

	Inferior 1 [process 51659] will be killed.

Quit anyway? (y or n) 
Please answer y or n.
A debugging session is active.

	Inferior 1 [process 51659] will be killed.

Quit anyway? (y or n) 
Please answer y or n.
A debugging session is active.

	Inferior 1 [process 51659] will be killed.

Quit anyway? (y or n) q
Please answer y or n.
A debugging session is active.

	Inferior 1 [process 51659] will be killed.

Quit anyway? (y or n) y
