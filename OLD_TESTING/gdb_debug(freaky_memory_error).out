GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from NT.out...
(gdb) bre[K[K[Kbreak 100
Breakpoint 1 at 0x8e90: file NeutrinoTransport.cpp, line 100.
(gdb) r
Starting program: /home/jared/NeutrinoTransport/NT.out 

Breakpoint 1, main () at NeutrinoTransport.cpp:100
100	    bool reStep = false;
(gdb) p Nold
$1 = std::vector of length 40, capacity 40 = {2.0670604655656601e-43, 1.1967951609422291e-41, 8.0018416135570447e-40, 6.1606900957471179e-38, 5.438044035249888e-36, 
  5.4697054476566914e-34, 6.2177269342479703e-32, 7.9040150973113898e-30, 1.1087078253247662e-27, 1.6879735248056888e-25, 2.7335968192868394e-23, 
  4.595650042527235e-21, 7.7901372040319048e-19, 1.286150263123611e-16, 1.985334953905138e-14, 2.7310058973659287e-12, 3.1650822177781018e-10, 2.8949381647035759e-08, 
  1.9370916630965444e-06, 8.6858768618741124e-05, 0.0023586550772510114, 0.034521960737139035, 0.23822065148902385, 0.66478260567979519, 0.62941511861482402, 
  0.16543157519432777, 0.0096007846358483039, 9.4780410103918622e-05, 1.1828311218247693e-07, 1.3314922220099499e-11, 9.2148180416628985e-17, 2.5378209427359312e-23, 
  1.6985902313900981e-31, 1.580303869552783e-41, 1.0857970851060191e-53, 2.6939042430535805e-68, 1.074807145763007e-85, 2.7645972434530933e-106, 
  1.6329748878206415e-130, 6.9076759098581606e-159}
(gdb) n
101	    int cycle = 0;
(gdb) n
102	    int true_cycle = 0;
(gdb) n
103	    int nIterations = 0;
(gdb) n
104	    int nTrueIterations = 0;
(gdb) n
105	    int maxFPIterations = 10000; 
(gdb) n
106	    int mAA = 3;
(gdb) n
108	    PlotFileNumber = Write_Plotfile(t, dt, Nold, eC, dV, kVec, cMat, 0, 0, 0, 0, FE, dt, dt, dt, PlotFileDir, PlotFileName, PlotFileNumber);
(gdb) p Nold
$2 = std::vector of length 40, capacity 40 = {2.0670604655656601e-43, 1.1967951609422291e-41, 8.0018416135570447e-40, 6.1606900957471179e-38, 5.438044035249888e-36, 
  5.4697054476566914e-34, 6.2177269342479703e-32, 7.9040150973113898e-30, 1.1087078253247662e-27, 1.6879735248056888e-25, 2.7335968192868394e-23, 
  4.595650042527235e-21, 7.7901372040319048e-19, 1.286150263123611e-16, 1.985334953905138e-14, 2.7310058973659287e-12, 3.1650822177781018e-10, 2.8949381647035759e-08, 
  1.9370916630965444e-06, 8.6858768618741124e-05, 0.0023586550772510114, 0.034521960737139035, 0.23822065148902385, 0.66478260567979519, 0.62941511861482402, 
  0.16543157519432777, 0.0096007846358483039, 9.4780410103918622e-05, 1.1828311218247693e-07, 1.3314922220099499e-11, 9.2148180416628985e-17, 2.5378209427359312e-23, 
  1.6985902313900981e-31, 1.580303869552783e-41, 1.0857970851060191e-53, 2.6939042430535805e-68, 1.074807145763007e-85, 2.7645972434530933e-106, 
  1.6329748878206415e-130, 6.9076759098581606e-159}
(gdb) n
109	    std::vector<double> wrtTimes = logspace(log10(t_W0), log10(t_end), nPlotFiles);
(gdb) n
110	    int wrtCount = 1;
(gdb) n
113	    while (!done) {
(gdb) p Nold
$3 = std::vector of length 40, capacity 40 = {2.0670604655656601e-43, 1.1967951609422291e-41, 8.0018416135570447e-40, 6.1606900957471179e-38, 5.438044035249888e-36, 
  5.4697054476566914e-34, 6.2177269342479703e-32, 7.9040150973113898e-30, 1.1087078253247662e-27, 1.6879735248056888e-25, 2.7335968192868394e-23, 
  4.595650042527235e-21, 7.7901372040319048e-19, 1.286150263123611e-16, 1.985334953905138e-14, 2.7310058973659287e-12, 3.1650822177781018e-10, 2.8949381647035759e-08, 
  1.9370916630965444e-06, 8.6858768618741124e-05, 0.0023586550772510114, 0.034521960737139035, 0.23822065148902385, 0.66478260567979519, 0.62941511861482402, 
  0.16543157519432777, 0.0096007846358483039, 9.4780410103918622e-05, 1.1828311218247693e-07, 1.3314922220099499e-11, 9.2148180416628985e-17, 2.5378209427359312e-23, 
  1.6985902313900981e-31, 1.580303869552783e-41, 1.0857970851060191e-53, 2.6939042430535805e-68, 1.074807145763007e-85, 2.7645972434530933e-106, 
  1.6329748878206415e-130, 6.9076759098581606e-159}
(gdb) n
116	        true_cycle++;
(gdb) n
118	            if (!reStep)
(gdb) p Nold
$4 = std::vector of length 0, capacity 0
(gdb) n
120	            cycle++;
(gdb) n
124	        if (true_cycle >= cycleM) {
(gdb) p Nold
$5 = std::vector of length 0, capacity 0
(gdb) quit
A debugging session is active.

	Inferior 1 [process 17427] will be killed.

Quit anyway? (y or n) y
